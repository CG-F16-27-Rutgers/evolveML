add jar /Volumes/work/data/csv-serde-0.9.1.jar;

 create table csvlog(user_id string, time string, action string, destination string,hotel string) row format serde 'com.bizo.hive.serde.csv.CSVSerde' with serdeproperties("separatorChar" = "\,","quoteChar"= "\"") stored as textfile;

 load data local inpath '/Volumes/work/data/clicklog.csv' into table csvlog3;

 create table csvpart(action string, destination string,hotel string) PARTITIONED(user_id string, time timestamp) row format serde 'com.bizo.hive.serde.csv.CSVSerde' with serdeproperties("separatorChar" = "\,","quoteChar"= "\"") stored as textfile;

select action,collect_set(destination),collect_set(time) from csvlog3 group by action;
select action,collect_set(destination),time from csvlog3 group by action;

select destination from csvlog3 group by floor(UNIX_TIMESTAMP(time)/120);


select NAME
, timer_interval_6
, rank() over (partition by NAME, timer_interval_6 order by ct desc) as ranking
from
  (select count(1) as ct
  ,  NAME
  ,  FLOOR(UNIX_TIMESTAMP(Time)/360) as time_interval_6
FROM MY_TABLE group by NAME, FLOOR(UNIX_TIMESTAMP(Time)/360) ) a where ranking <= 2 ;


  select destination
    , timer_interval_6
    , rank() over (partition by destination, timer_interval_6 order by ct desc) as ranking
    from
      (select count(1) as ct
      ,  destination
      ,  FLOOR(UNIX_TIMESTAMP(Time)/360) as time_interval_6
    FROM csvlog3
      group by destination,  FLOOR(UNIX_TIMESTAMP(Time)/360)
        ) a
    where ranking <= 2
    ;

select name,count(2),FLOOR(UNIX_TIMESTAMP(time)/360) from csvlog GROUP BY name , FLOOR(UNIX_TIMESTAMP(time)/360) limit 10;

A	1062	NULL
B	8	NULL
C	4	NULL
D	6	NULL
E	6	NULL
F	5	NULL
G	1	NULL
H	2	NULL
I	7	NULL


==============
QUERIES

Some useful links-
https://blogs.oracle.com/taylor22/entry/hive_0_11_may_15
http://stackoverflow.com/questions/9390698/hive-getting-top-n-records-in-group-by-query
----


select 
destination ,time_interval_6
from
(
select destination
, time_interval_6
, rank() over (partition by destination, time_interval_6 order by ct desc) as ranking
from
  (select count(1) as ct
  ,  destination
  ,  floor((floor(cast(substring(time,1,2) as int)*60 + cast(substring(time,4,2) as int)))/10) as time_interval_6
FROM csvlog
  group by destination,  floor((floor(cast(substring(time,1,2) as int)*60 + cast(substring(time,4,2) as int)))/10)
   ) a
)b
where ranking <= 2
;


CREATE TABLE temp AS select 
destination ,time_interval_6
from
(
select destination
, time_interval_6
, rank() over (partition by destination, time_interval_6 order by ct desc) as ranking
from
  (select count(1) as ct
  ,  destination
  ,  FLOOR(UNIX_TIMESTAMP(Time,'HH:mm:ss')/600) as time_interval_6
FROM csvlog
  group by destination,  FLOOR(UNIX_TIMESTAMP(Time,'HH:mm:ss')/600)
   ) a
)b
where ranking <= 10
order by time_interval_6
;



select destination,from_unixtime(CAST(time_interval_6 as timestamp),'HH:mm:ss') from temp;

=======================================Query2=====================================================
I was quite confused about this problem -2.
As it has unique user more than 1000+ but maximum occurance of Hotel is 13 , so how each user might have clicked it

Select value as second_distinct
from
(select value
  , rank() over (order by value desc) as rank
from
    (SELECT
      value
      , length(COLLECT_set(user)) as users
      --or count(distinct user) as users
    FROM
    my_table
    group by value
   ) a
left outer join
    (select count(1) as count_users
     from 
         (select users 
         from my_table 
         group by users
          ) c
     ) b
on (1=1)
where a.users=b.count_users
) d
where rank = 2
;


===============
http://stackoverflow.com/questions/7677333/how-to-write-subquery-and-use-in-clause-in-hive

select c.user_id 
from csvlog c
where c.user_id NOT IN (select d.user_id from csvlog d where action = 'Click' and hotel = '' group by d.user_id having count(d.user_id) < 2)
;



select c.user_id
from csvlog c
group by c.user_id
having sum(case when c.hotel = '' and c.action = 'Click' then 1 else 0 end) < 2;

==========================PLAY===================


create table csvlog(user_id string, time timestamp, action string, destination string, hotel string) row format serde 'com.bizo.hive.serde.csv.CSVSerde' with serdeproperties("separatorChar" = "\,","quoteChar"= "\"") stored as textfile;

load data local inpath '/home/cloudera/clicklog.csv' into table csvl


create table part(user_id string, time timestamp, action string, hotel string) PARTITIONED BY(destination string) row format serde 'com.bizo.hive.serde.csv.CSVSerde' with serdeproperties("separatorChar" = "\,","quoteChar"= "\"") stored as textfile;

load data local inpath '/home/cloudera/clicklog.csv' into table part partition(destination='Ireland');

FROM csvlog csv
INSERT OVERWRITE TABLE part PARTITION(destination='Berlin')
SELECT csv.user_id,csv.time,csv.action,csv.hotel
WHERE csv.destination = 'Berlin';

select destination, count(1),floor((floor(cast(substring(time,1,2) as int)*60 + cast(substring(time,4,2) as int)))/6) from csvlog GROUP BY destination , floor((floor(cast(substring(time,1,2) as int)*60 + cast(substring(time,4,2) as int)))/6) limit 10;


//get hotel count
create table temp2 AS select hotel , count(*) as c from csvlog group by hotel order by c desc;
create table temp1 AS select hotel, count(distinct user_id) as c from csvlog group by hotel order by c desc;

create table temp3 AS select user_id,count(user_id) as c from csvlog group by user_id order by c desc;


select user_id from csvlog where (select count)

create table as temp 4 select user_id from csvlog where action <> '';

